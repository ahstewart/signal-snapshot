{"ast":null,"code":"var _jsxFileName = \"E:\\\\ahste\\\\Projects\\\\signal-analytics\\\\frontend\\\\src\\\\components\\\\IndividualStats.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, FormControl, Grid, InputLabel, MenuItem, Paper, Select, Typography } from '@mui/material';\nimport { loadUsers, loadIndividualStats } from '../utils/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualStats = ({\n  file,\n  setFile,\n  dbBuffer,\n  setDbBuffer,\n  dbKey,\n  setDbKey,\n  loading,\n  setLoading,\n  setError\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [statsData, setStatsData] = useState(null);\n  useEffect(() => {\n    if (selectedUser && dbBuffer) {\n      fetchIndividualStats(selectedUser);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedUser]);\n  const handleUploadAndAnalyse = async () => {\n    if (!dbBuffer) return;\n    setLoading(true);\n    setError(null);\n    setUsers([]);\n    try {\n      const userList = await loadUsers(dbBuffer, undefined);\n      setUsers(userList);\n      setDbKey(undefined);\n    } catch (err) {\n      if (err instanceof Error && err.message.includes('Please provide a key')) {\n        const key = window.prompt('This database appears to be encrypted. Please provide your key:');\n        if (key) {\n          setDbKey(key);\n          try {\n            const userList = await loadUsers(dbBuffer, key);\n            setUsers(userList);\n          } catch (secondErr) {\n            const msg = secondErr instanceof Error ? secondErr.message : 'An unknown error occurred during decryption.';\n            setError(msg);\n          }\n        } else {\n          setError('An encryption key is required to process this file.');\n        }\n      } else {\n        const msg = err instanceof Error ? err.message : 'An unknown error occurred.';\n        setError(msg);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchIndividualStats = async userId => {\n    if (!dbBuffer) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const stats = await loadIndividualStats(dbBuffer, dbKey, userId);\n      setStatsData(stats);\n    } catch (err) {\n      const msg = err instanceof Error ? err.message : 'An unknown error occurred.';\n      setError(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUserChange = event => {\n    setSelectedUser(event.target.value);\n  };\n  const renderKpiCard = (title, value) => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"div\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Individual Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), users.length > 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"user-select-label\",\n        children: \"Select User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"user-select-label\",\n        value: selectedUser,\n        label: \"Select User\",\n        onChange: handleUserChange,\n        children: users.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.id,\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), statsData && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [renderKpiCard('Total Messages Sent', statsData.totalMessagesSent), renderKpiCard('Most Popular Day', statsData.mostPopularDay), renderKpiCard('Total Reactions Sent', statsData.totalReactionsSent)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(IndividualStats, \"j3ulEiXWWSmovxHruquWr6Ra3Qk=\");\n_c = IndividualStats;\nexport default IndividualStats;\nvar _c;\n$RefreshReg$(_c, \"IndividualStats\");","map":{"version":3,"names":["React","useState","useEffect","Box","FormControl","Grid","InputLabel","MenuItem","Paper","Select","Typography","loadUsers","loadIndividualStats","jsxDEV","_jsxDEV","IndividualStats","file","setFile","dbBuffer","setDbBuffer","dbKey","setDbKey","loading","setLoading","setError","_s","users","setUsers","selectedUser","setSelectedUser","statsData","setStatsData","fetchIndividualStats","handleUploadAndAnalyse","userList","undefined","err","Error","message","includes","key","window","prompt","secondErr","msg","userId","stats","handleUserChange","event","target","value","renderKpiCard","title","item","xs","sm","children","sx","p","textAlign","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","gutterBottom","length","fullWidth","mb","id","labelId","label","onChange","map","user","name","container","spacing","totalMessagesSent","mostPopularDay","totalReactionsSent","_c","$RefreshReg$"],"sources":["E:/ahste/Projects/signal-analytics/frontend/src/components/IndividualStats.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Alert,\n  Box,\n  Button,\n  CircularProgress,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material';\nimport { User, IndividualStatsData, loadUsers, loadIndividualStats } from '../utils/database';\n\ninterface IndividualStatsProps {\n  users: any[];\n  selectedUser: string;\n  setSelectedUser: React.Dispatch<React.SetStateAction<string>>;\n  statsData: any;\n  loading: boolean;\n  error: string | null;\n}\n\nconst IndividualStats: React.FC<IndividualStatsProps> = ({ file, setFile, dbBuffer, setDbBuffer, dbKey, setDbKey, loading, setLoading, setError }) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<string>('');\n  const [statsData, setStatsData] = useState<IndividualStatsData | null>(null);\n\n  useEffect(() => {\n    if (selectedUser && dbBuffer) {\n      fetchIndividualStats(selectedUser);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedUser]);\n\n\n\n  const handleUploadAndAnalyse = async (): Promise<void> => {\n    if (!dbBuffer) return;\n\n    setLoading(true);\n    setError(null);\n    setUsers([]);\n\n    try {\n      const userList = await loadUsers(dbBuffer, undefined);\n      setUsers(userList);\n      setDbKey(undefined);\n    } catch (err) {\n      if (err instanceof Error && err.message.includes('Please provide a key')) {\n        const key = window.prompt('This database appears to be encrypted. Please provide your key:');\n        if (key) {\n          setDbKey(key);\n          try {\n            const userList = await loadUsers(dbBuffer, key);\n            setUsers(userList);\n          } catch (secondErr) {\n            const msg = secondErr instanceof Error ? secondErr.message : 'An unknown error occurred during decryption.';\n            setError(msg);\n          }\n        } else {\n          setError('An encryption key is required to process this file.');\n        }\n      } else {\n        const msg = err instanceof Error ? err.message : 'An unknown error occurred.';\n        setError(msg);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchIndividualStats = async (userId: string) => {\n    if (!dbBuffer) return;\n\n    setLoading(true);\n    setError(null);\n    try {\n      const stats = await loadIndividualStats(dbBuffer, dbKey, userId);\n      setStatsData(stats);\n    } catch (err) {\n      const msg = err instanceof Error ? err.message : 'An unknown error occurred.';\n      setError(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUserChange = (event: SelectChangeEvent<string>) => {\n    setSelectedUser(event.target.value);\n  };\n\n  const renderKpiCard = (title: string, value: string | number) => (\n    <Grid item xs={12} sm={4}>\n      <Paper sx={{ p: 2, textAlign: 'center' }}>\n        <Typography variant=\"h4\" component=\"div\">{value}</Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">{title}</Typography>\n      </Paper>\n    </Grid>\n  );\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Individual Stats\n      </Typography>\n\n      {/* Upload controls removed; now in header */}\n\n      {users.length > 0 && (\n        <FormControl fullWidth sx={{ mb: 4 }}>\n          <InputLabel id=\"user-select-label\">Select User</InputLabel>\n          <Select\n            labelId=\"user-select-label\"\n            value={selectedUser}\n            label=\"Select User\"\n            onChange={handleUserChange}\n          >\n            {users.map(user => (\n              <MenuItem key={user.id} value={user.id}>\n                {user.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      )}\n\n      {statsData && (\n        <Grid container spacing={3}>\n          {renderKpiCard('Total Messages Sent', statsData.totalMessagesSent)}\n          {renderKpiCard('Most Popular Day', statsData.mostPopularDay)}\n          {renderKpiCard('Total Reactions Sent', statsData.totalReactionsSent)}\n        </Grid>\n      )}\n    </Box>\n  );\n};\n\nexport default IndividualStats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}